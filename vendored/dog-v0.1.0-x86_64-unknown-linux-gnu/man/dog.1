.\" Automatically generated by Pandoc 2.10.1
.\"
.TH "dog" "1" "" "v0.1.0" ""
.hy
.SH NAME
.PP
dog \[em] a command-line DNS client
.SH SYNOPSIS
.PP
\f[C]dog [options] [domains...]\f[R]
.PP
\f[B]dog\f[R] is a command-line DNS client.
It has colourful output, supports the DNS-over-TLS and DNS-over-HTTPS
protocols, and can emit JSON.
.SH EXAMPLES
.TP
\f[B]\f[CB]dog example.net\f[B]\f[R]
Query the \f[C]A\f[R] record of a domain using default settings
.TP
\f[B]\f[CB]dog example.net MX\f[B]\f[R]
\&...looking up \f[C]MX\f[R] records instead
.TP
\f[B]\f[CB]dog example.net MX \[at]1.1.1.1\f[B]\f[R]
\&...using a specific nameserver instead
.TP
\f[B]\f[CB]dog example.net MX \[at]1.1.1.1 -T\f[B]\f[R]
\&...using TCP rather than UDP
.TP
\f[B]\f[CB]dog -q example.net -t MX -n 1.1.1.1 -T\f[B]\f[R]
As above, but using explicit arguments
.SH QUERY OPTIONS
.TP
\f[B]\f[CB]-q\f[B]\f[R], \f[B]\f[CB]--query=HOST\f[B]\f[R]
Host name or domain name to query.
.TP
\f[B]\f[CB]-t\f[B]\f[R], \f[B]\f[CB]--type=TYPE\f[B]\f[R]
Type of the DNS record being queried (\f[C]A\f[R], \f[C]MX\f[R],
\f[C]NS\f[R]\&...)
.TP
\f[B]\f[CB]-n\f[B]\f[R], \f[B]\f[CB]--nameserver=ADDR\f[B]\f[R]
Address of the nameserver to send packets to.
.TP
\f[B]\f[CB]--class=CLASS\f[B]\f[R]
Network class of the DNS record being queried (\f[C]IN\f[R],
\f[C]CH\f[R], \f[C]HS\f[R])
.PP
By default, dog will request A records using the system default
resolver.
At least one domain name must be passed \[em] dog will not automatically
query the root nameservers.
.PP
Query options passed in using a command-line option, such as
`\f[C]--query lookup.dog\f[R]' or `\f[C]--type MX\f[R]', or as plain
arguments, such as `\f[C]lookup.dog\f[R]' or `\f[C]MX\f[R]'.
dog will make an intelligent guess as to what plain arguments mean
(\f[C]MX\f[R] is quite clearly a type), which makes it easier to compose
ad-hoc queries quickly.
If precision is desired, use the long-form options.
.PP
If more than one domain, type, nameserver, or class is specified, dog
will perform one query for each combination, and display the combined
results in a table.
For example, passing three type arguments and two domain name arguments
will send six requests.
.PP
DNS traditionally uses port 53 for both TCP and UDP.
To use a resolver with a different port, include the port number after a
colon (\f[C]:\f[R]) in the nameserver address.
.SH SENDING OPTIONS
.TP
\f[B]\f[CB]--edns=SETTING\f[B]\f[R]
Whether to opt in to DNS.
This can be `\f[C]disable\f[R]', `\f[C]hide\f[R]', or `\f[C]show\f[R]'.
.TP
\f[B]\f[CB]--txid=NUMBER\f[B]\f[R]
Set the transaction ID to a specific value.
.TP
\f[B]\f[CB]-Z=TWEAKS\f[B]\f[R]
Set uncommon protocol-level tweaks.
.SH TRANSPORT OPTIONS
.TP
\f[B]\f[CB]-U\f[B]\f[R], \f[B]\f[CB]--udp\f[B]\f[R]
Use the DNS protocol over UDP.
.TP
\f[B]\f[CB]-T\f[B]\f[R], \f[B]\f[CB]--tcp\f[B]\f[R]
Use the DNS protocol over TCP.
.TP
\f[B]\f[CB]-S\f[B]\f[R], \f[B]\f[CB]--tls\f[B]\f[R]
Use the DNS-over-TLS protocol.
.TP
\f[B]\f[CB]-H\f[B]\f[R], \f[B]\f[CB]--https\f[B]\f[R]
Use the DNS-over-HTTPS protocol.
.PP
By default, dog will use the UDP protocol, automatically re-sending the
request using TCP if the response indicates that the message is too
large for UDP.
Passing \f[C]--udp\f[R] will only use UDP and will fail in this case;
passing \f[C]--tcp\f[R] will use TCP by default.
.PP
The DNS-over-TLS (DoT) and DNS-over-HTTPS (DoH) protocols are available
with the \f[C]--tls\f[R] and \f[C]--https\f[R] options.
Bear in mind that the system default resolver is unlikely to respond to
requests using these protocols.
.PP
Note that if a hostname or domain name is given as a nameserver, rather
than an IP address, the resolution of that host is performed by the
operating system, \f[I]not\f[R] by dog.
.PP
Unlike the others, the HTTPS transport type requires an entire URL,
complete with protocol, domain name, and path.
.SH OUTPUT OPTIONS
.TP
\f[B]\f[CB]-1\f[B]\f[R], \f[B]\f[CB]--short\f[B]\f[R]
Short mode: display nothing but the first result.
.TP
\f[B]\f[CB]-J\f[B]\f[R], \f[B]\f[CB]--json\f[B]\f[R]
Display the output as JSON.
.TP
\f[B]\f[CB]--color\f[B]\f[R], \f[B]\f[CB]--colour=WHEN\f[B]\f[R]
When to colourise the output.
This can be `\f[C]always\f[R]', `\f[C]automatic\f[R]', or
`\f[C]never\f[R]'.
.TP
\f[B]\f[CB]--seconds\f[B]\f[R]
Do not format durations as hours and minutes; instead, display them as
seconds.
.TP
\f[B]\f[CB]--time\f[B]\f[R]
Print how long the response took to arrive.
.SH META OPTIONS
.TP
\f[B]\f[CB]--help\f[B]\f[R]
Displays an overview of the command-line options.
.TP
\f[B]\f[CB]--version\f[B]\f[R]
Displays the version of dog being invoked.
.SH ENVIRONMENT VARIABLES
.PP
dog responds to the following environment variables:
.SS \f[C]DOG_DEBUG\f[R]
.PP
Set this to any non-empty value to have dog emit debugging information
to standard error.
For more in-depth output, set this to the exact string
`\f[C]trace\f[R]'.
.SH RECORD TYPES
.PP
dog understands and can interpret the following record types:
.TP
\f[B]\f[CB]A\f[B]\f[R]
IPv4 addresses
.TP
\f[B]\f[CB]AAAA\f[B]\f[R]
IPv6 addresses
.TP
\f[B]\f[CB]CAA\f[B]\f[R]
permitted certificate authorities
.TP
\f[B]\f[CB]CNAME\f[B]\f[R]
canonical domain aliases
.TP
\f[B]\f[CB]HINFO\f[B]\f[R]
system information and, sometimes, forbidden request explanations
.TP
\f[B]\f[CB]LOC\f[B]\f[R]
location information
.TP
\f[B]\f[CB]MX\f[B]\f[R]
e-mail server addresses
.TP
\f[B]\f[CB]NAPTR\f[B]\f[R]
DDDS rules
.TP
\f[B]\f[CB]NS\f[B]\f[R]
domain name servers
.TP
\f[B]\f[CB]OPT\f[B]\f[R]
extensions to the DNS protocol
.TP
\f[B]\f[CB]PTR\f[B]\f[R]
pointers to canonical names, usually for reverse lookups
.TP
\f[B]\f[CB]SOA\f[B]\f[R]
administrative information about zones
.TP
\f[B]\f[CB]SRV\f[B]\f[R]
IP addresses with port numbers
.TP
\f[B]\f[CB]SSHFP\f[B]\f[R]
SSH key fingerprints
.TP
\f[B]\f[CB]TLSA\f[B]\f[R]
TLS certificates, public keys, and hashes
.TP
\f[B]\f[CB]TXT\f[B]\f[R]
arbitrary textual information
.PP
When a response DNS packet contains a record of one of these known
types, dog will display it in a table containing the type name and a
human-readable summary of its contents.
.PP
Records with a type number that does not map to any known record type
will still be displayed.
As they cannot be interpreted, their contents will be displayed as a
series of numbers instead.
.PP
dog also contains a list of record type names that it knows the type
number of, but is not able to interpret, such as \f[C]IXFR\f[R] or
\f[C]ANY\f[R] or \f[C]AFSDB\f[R].
These are acceptable as command-line arguments, meaning you can send an
AFSDB request with `\f[C]dog AFSDB\f[R]'.
However, their response contents will still be displayed as numbers.
They may be supported in future versions of dog.
.SH PROTOCOL TWEAKS
.PP
The \f[C]-Z\f[R] command-line argument can be used one or more times to
set some protocol-level options in the DNS queries that get sent.
It accepts the following values:
.TP
\f[B]\f[CB]aa\f[B]\f[R]
Sets the \f[C]AA\f[R] (Authoritative Answers) bit in the query.
.TP
\f[B]\f[CB]ad\f[B]\f[R]
Sets the \f[C]AD\f[R] (Authentic Data) bit in the query.
.TP
\f[B]\f[CB]bufsize=NUM\f[B]\f[R]
Sets the UDP payload size field in the OPT field in the query.
This has no effect if EDNS is diabled.
.TP
\f[B]\f[CB]cd\f[B]\f[R]
Sets the \f[C]CD\f[R] (Checking Disabled) bit in the query.
.SH EXIT STATUSES
.TP
0
If everything goes OK.
.TP
1
If there was a network, I/O, or TLS error during operation.
.TP
2
If there is no result from the server when running in short mode.
This can be any received server error, not just NXDOMAIN.
.TP
3
If there was a problem with the command-line arguments.
.SH AUTHOR
.PP
dog is maintained by Benjamin `ogham' Sago.
.PP
\f[B]Website:\f[R] \f[C]https://dns.lookup.dog/\f[R]
.PD 0
.P
.PD
\f[B]Source code:\f[R] \f[C]https://github.com/ogham/dog\f[R]
